{"version":3,"sources":["app.js"],"names":["$","App","Collections","Models","Views","Backbone","View","extend","el","initialize","Drop","this","collection","on","render","self","$el","find","html","each","dropItem","dropItemView","DropItem","model","append","data","get","pep","initiate","droppable","stop","event","object","$item","intersected","activeDropRegions","length","saveSelectedItem","revert","debug","place","template","tagName","className","rendered","Mustache","toJSON","addClass","attr","AvailableDrag","css","visibility","selectedItems","push","serviceName","console","log","models","item","removeSelectedItem","$empty","availableItem","availableDragItem","AvailableDragItem","AvailableItems","Collection","url","fetch","reset","SelectedItems","availableItems"],"mappings":"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","file":"app.js","sourcesContent":["$(function () {\n\tvar App = {};\n\tApp.Collections = {};\n\tApp.Models = {};\n\tApp.Views = {};\n\n\t/*****************\n\t *\n\t *  Views\n\t *\n\t ******************/\n\n\t// Main view\n\tApp.Views.App = Backbone.View.extend({\n\t\tel: '.js-services',\n\t\tinitialize: function () {\n\n\t\t}\n\t});\n\n\t// Drag view\n\tApp.Views.Drop = Backbone.View.extend({\n\t\tel: '.js-drop',\n\t\tinitialize: function () {\n\t\t\tthis.collection.on('add', function () {\n\t\t\t\tthis.render();\n\t\t\t}, this);\n\t\t},\n\t\trender: function () {\n\t\t\tvar self = this;\n\n\t\t\tthis.$el.find('.js-selectedItems').html('');\n\t\t\tthis.collection.each(function (dropItem, index) {\n\t\t\t\tvar dropItemView = new App.Views.DropItem({\n\t\t\t\t\tmodel: dropItem\n\t\t\t\t});\n\t\t\t\tthis.$el.find('.js-selectedItems').append(dropItemView.$el.data('serviceName', dropItem.get('name')));\n\t\t\t}, this);\n\n\t\t\t// Drag init\n\t\t\t$('.js-dragItem').pep({\n\t\t\t\tinitiate: function () {\n\t\t\t\t\t// console.log('initiate');\n\t\t\t\t},\n\t\t\t\tdroppable: '.js-drop',\n\t\t\t\tstop: function (event, object) {\n\t\t\t\t\tvar $item = $(object.el),\n\t\t\t\t\t\tintersected = this.activeDropRegions.length;\n\n\n\t\t\t\t\tif (intersected) {\n\t\t\t\t\t\tself.saveSelectedItem($item);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trevert: true,\n\t\t\t\tdebug: true,\n\t\t\t\tplace: false\n\t\t\t});\n\t\t}\n\t});\n\t// Drag item view\n\tApp.Views.DropItem = Backbone.View.extend({\n\t\ttemplate: $('#dragItemTemplate').html(),\n\t\ttagName: 'li',\n\t\tclassName: 'services__item js-dropItem',\n\t\tinitialize: function () {\n\t\t\tthis.render();\n\t\t},\n\t\trender: function () {\n\t\t\tvar rendered = Mustache.render(this.template, this.model.toJSON());\n\t\t\tthis.$el.html(rendered);\n\t\t\tthis.$el.addClass('services__item_' + this.model.get('icon'));\n\t\t\tthis.$el.attr('id', 'dropItem-' + this.model.get('id'));\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t// Available drag view\n\tApp.Views.AvailableDrag = Backbone.View.extend({\n\t\tel: '.js-drag',\n\t\tinitialize: function () {\n\t\t\tthis.collection.on('reset', function () {\n\t\t\t\tthis.render();\n\t\t\t}, this);\n\t\t},\n\t\tsaveSelectedItem: function ($item) {\n\t\t\t$item.css({\n\t\t\t\tvisibility: 'hidden'\n\t\t\t});\n\t\t\tselectedItems.push({\n\t\t\t\tserviceName: $item.data('serviceName')\n\t\t\t});\n\t\t\tconsole.log(selectedItems.models.length);\n\t\t\t$('.js-selected').html('');\n\t\t\tselectedItems.each(function (item) {\n\t\t\t\t$('.js-selected').append('<li>' + item.get('serviceName') + '</li>');\n\t\t\t});\n\t\t},\n\t\tremoveSelectedItem: function () {\n\n\t\t},\n\t\trender: function () {\n\t\t\tvar self = this,\n\t\t\t\t$empty = $('.js-dragEmpty');\n\n\t\t\tthis.$el.html('');\n\t\t\t$empty.html('');\n\t\t\tthis.collection.each(function (availableItem, index) {\n\t\t\t\tvar availableDragItem = new App.Views.AvailableDragItem({\n\t\t\t\t\tmodel: availableItem\n\t\t\t\t});\n\t\t\t\tthis.$el.append(availableDragItem.$el.data('serviceName', availableItem.get('name')));\n\t\t\t\t$empty.append('<li class=\"services__empty-item\"></li>');\n\t\t\t}, this);\n\n\t\t\t// Drag init\n\t\t\t$('.js-dragItem').pep({\n\t\t\t\tinitiate: function () {\n\t\t\t\t\t// console.log('initiate');\n\t\t\t\t},\n\t\t\t\tdroppable: '.js-drop',\n\t\t\t\tstop: function (event, object) {\n\t\t\t\t\tvar $item = $(object.el),\n\t\t\t\t\t\tintersected = this.activeDropRegions.length;\n\n\n\t\t\t\t\tif (intersected) {\n\t\t\t\t\t\tself.saveSelectedItem($item);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trevert: true,\n\t\t\t\tdebug: true,\n\t\t\t\tplace: false\n\t\t\t});\n\t\t}\n\t});\n\t// Available drag item view\n\tApp.Views.AvailableDragItem = Backbone.View.extend({\n\t\ttemplate: $('#dragItemTemplate').html(),\n\t\ttagName: 'li',\n\t\tclassName: 'services__item js-dragItem',\n\t\tinitialize: function () {\n\t\t\tthis.render();\n\t\t},\n\t\trender: function () {\n\t\t\tvar rendered = Mustache.render(this.template, this.model.toJSON());\n\t\t\tthis.$el.html(rendered);\n\t\t\tthis.$el.addClass('services__item_' + this.model.get('icon'));\n\t\t\tthis.$el.attr('id', 'dragItem-' + this.model.get('id'));\n\t\t\treturn this;\n\t\t}\n\t});\n\n\n\t/*****************\n\t *\n\t *  Collections\n\t *\n\t ******************/\n\n\t// Available items\n\tApp.Collections.AvailableItems = Backbone.Collection.extend({\n\t\turl: $('#dragItemTemplate').data('url'),\n\t\tinitialize: function () {\n\t\t\tthis.fetch({\n\t\t\t\treset: true\n\t\t\t});\n\t\t}\n\t});\n\t// Selected items\n\tApp.Collections.SelectedItems = Backbone.Collection.extend({});\n\n\n\t/*****************\n\t *\n\t *  Initialize\n\t *\n\t ******************/\n\tvar availableItems = new App.Collections.AvailableItems(),\n\t\tselectedItems = new App.Collections.SelectedItems();\n\n\tvar appView = new App.Views.App(),\n\t\tavailableItemsView = new App.Views.AvailableDrag({\n\t\t\tcollection: availableItems\n\t\t}),\n\t\tdropView = new App.Views.Drop({\n\t\t\tcollection: selectedItems\n\t\t});\n});\n"],"sourceRoot":"/source/"}